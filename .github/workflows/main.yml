name: ZYZ_CSharp_Extension

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Extract version from csproj
      id: get_version
      run: |
        $version = Select-Xml -Path './ZYZ-CSharp-Extension.csproj' -XPath '/Project/PropertyGroup/Version' | % { $_.Node.InnerText }
        echo "Version is $version"
        echo "::set-output name=version::$version"
      shell: pwsh

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release --output ${{ github.workspace }}/build

    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal

    - name: Pack
      run: dotnet pack --no-build --configuration Release -o ${{ github.workspace }}/nupkgs

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release-${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (NuGet Package)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/nupkgs/*.nupkg
        asset_name: ZYZ_CSharp_Extension-${{ steps.get_version.outputs.version }}.nupkg
        asset_content_type: application/zip

    - name: Upload Release Asset (DLL)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build/*.dll
        asset_name: ZYZ_CSharp_Extension-${{ steps.get_version.outputs.version }}.dll
        asset_content_type: application/octet-stream
